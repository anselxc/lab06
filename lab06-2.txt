#include <Keypad.h>

#define NOTE_C4 262
#define NOTE_CS4 277
#define NOTE_D4 294
#define NOTE_DS4 311
#define NOTE_E4 330
#define NOTE_F4 349
#define NOTE_FS4 370
#define NOTE_G4 392
#define NOTE_GS4 415
#define NOTE_A4 440
#define NOTE_AS4 466
#define NOTE_B4 494
#define NOTE_C5 523
#define NOTE_CS5 554
#define NOTE_D5 587
#define NOTE_DS5 622
#define NOTE_E5 659
#define NOTE_F5 698
#define NOTE_FS5 740
#define NOTE_G5 784
#define NOTE_GS5 831
#define NOTE_A5 880
#define NOTE_AS5 932
#define NOTE_B5 988
#define NOTE_C6 1047
#define NOTE_CS6 1109
#define NOTE_D6 1175
#define NOTE_DS6 1245
#define NOTE_E6 1319
#define NOTE_F6 1397
#define NOTE_FS6 1480
#define NOTE_G6 1568
#define NOTE_GS6 1661
#define NOTE_A6 1760
#define NOTE_AS6 1865
#define NOTE_B6 1976
const byte Buzzer = 13;                //喇叭接腳
const int rhythm = 500;
char index, key, chr, ch[4] = {'S', 'i', 'n', 'g'}; //用來判斷輸入
int Leng, step, count;
char song_tone;
int pitch[] = {0,
    NOTE_C4,NOTE_D4,NOTE_E4,NOTE_F4,NOTE_G4,NOTE_A4,NOTE_B4,
    NOTE_C5,NOTE_D5,NOTE_E5,NOTE_F5,NOTE_G5,NOTE_A5,NOTE_B5};
float song[] = {                  //歌曲”小星星”
  1,0.5, 1,0.5, 5,0.5, 5,0.5, 6,0.5, 6,0.5, 5,1,
  4,0.5, 4,0.5, 3,0.5, 3,0.5, 2,0.5, 2,0.5, 1,1,
  5,0.5, 5,0.5, 4,0.5, 4,0.5, 3,0.5, 3,0.5, 2,1,
  5,0.5, 5,0.5, 4,0.5, 4,0.5, 3,0.5, 3,0.5, 2,1,
  1,0.5, 1,0.5, 5,0.5, 5,0.5, 6,0.5, 6,0.5, 5,1,
  4,0.5, 4,0.5, 3,0.5, 3,0.5, 2,0.5, 2,0.5, 1,1,
  0,1.5, -1};
int tune[] = {                    //4*4鍵盤Do ~ Si
  NOTE_C5,NOTE_D5,NOTE_E5,NOTE_F5,NOTE_G5,NOTE_A5,NOTE_B5};

const byte ROWS = 4;                //4行
const byte COLS = 4;                //4列
char keys[ROWS][COLS] = {
  {'F','E','D','C'},
  {'B','3','6','9'},
  {'A','2','5','8'},
  {'0','1','4','7'}
};
byte rowPins[ROWS] = {8, 9, 10, 11};        //行的接腳
byte colPins[COLS] = {4, 5, 6, 7};          //列的接腳
Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );
void setup() {
  pinMode (Buzzer,OUTPUT);
  Serial.begin(9600);
  step = 0;
  count = 0;
}

void loop() {
  if (Serial.available()) {           //判斷輸入
    chr = Serial.read();
    if (chr == ch[count]) {           //如果連續輸入Sing
      count++;
      if (count >= 4)             //切換為唱歌
        step = 1;
    }
    else
      count = 0;
    if (step == 1) {              //step=1開始唱歌
      Serial.println("Start Sing !!");
      index = 0;
      while (1) {
        song_tone = song[index];
        index++;
        Leng = song[index]*rhythm;
        index++;
        if (song_tone == -1)
          break;
        else if (song_tone == 0)
          delay (Leng*1.3);
        else {
          tone(Buzzer, pitch[song_tone], Leng);
          delay (Leng*1.3);
        }
      }
      step = 0;                 //唱歌結束
    }
    delay (200*1.3);
  }
  key = keypad.getKey();
    if (key != NO_KEY)  {           //如果key有值的話
      if(key == '1') {              //按下1唱Do
        tone(Buzzer, tune[0], 500);
        Serial.print("Tone ");
        Serial.println(key);
      }
      else if(key == '2') {           //按下2唱Re
        tone(Buzzer, tune[1], 500);
        Serial.print("Tone ");
        Serial.println(key);
      }
      else if(key == '3') {           //按下3唱Mi
        tone(Buzzer, tune[2], 500);
        Serial.print("Tone ");
        Serial.println(key);
      }
      else if(key == '4') {           //按下4唱Fa
        tone(Buzzer, tune[3], 500);
        Serial.print("Tone ");
        Serial.println(key);
      }
      else if(key == '5') {           //按下5唱So
        tone(Buzzer, tune[4], 500);
        Serial.print("Tone ");
        Serial.println(key);
      }
      else if(key == '6') {           //按下6唱La
        tone(Buzzer, tune[5], 500);
        Serial.print("Tone ");
        Serial.println(key);
      }
      else if(key == '7') {           //按下7唱Si
        tone(Buzzer, tune[6], 500);
        Serial.print("Tone ");
        Serial.println(key);
      }
    delay (50);
    }
}
